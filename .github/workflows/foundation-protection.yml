name: 🔒 Foundation Protection & Quality Assurance

on:
  pull_request:
    branches: [main]
  push:
    branches: [feature/*, develop]

jobs:
  foundation-protection:
    name: 🔒 Foundation Protection Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: 🔧 Install Dependencies
        run: |
          npm install -g pnpm
          pnpm install
          
      - name: 🔒 Foundation Structure Validation
        run: |
          echo "🧪 Testing foundation structure integrity..."
          npm run test:foundation
          
      - name: ⚡ Performance Benchmark Validation
        run: |
          echo "📊 Validating performance benchmarks..."
          npx playwright test tests/foundation-validation.spec.ts --project=chromium --grep "performance"
          
      - name: 🏗️ Build Validation
        run: |
          echo "🔨 Testing production build..."
          npm run build
          
      - name: 🧹 Code Quality Check
        run: |
          echo "✨ Running code quality validation..."
          npm run lint
          
      - name: 📱 Cross-Platform Foundation Test
        run: |
          echo "📱 Testing foundation across devices..."
          npx playwright test tests/foundation-validation.spec.ts --project="Mobile Chrome" --grep "Cross-Platform"

  feature-validation:
    name: 🧪 Feature Integration Tests
    runs-on: ubuntu-latest
    needs: foundation-protection
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: 🔧 Install Dependencies
        run: |
          npm install -g pnpm
          pnpm install
          
      - name: 🎯 Event Management Reality Check
        run: |
          echo "🎯 Testing event management integration..."
          npx playwright test tests/event-management-reality.spec.ts --project=chromium
          
      - name: 🤖 AI Features Validation
        run: |
          echo "🤖 Testing AI Assistant and CommandBar..."
          npx playwright test tests/event-management-reality.spec.ts --project=chromium --grep "AI|CommandBar"
          
      - name: 💾 Data Persistence Validation
        run: |
          echo "💾 Testing IndexedDB and data flow..."
          npx playwright test tests/event-management-reality.spec.ts --project=chromium --grep "IndexedDB"

  security-scan:
    name: 🛡️ Security & Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔍 Dependency Security Audit
        run: npm audit --audit-level=moderate
        
      - name: 📊 Bundle Size Analysis
        run: |
          npm install -g pnpm
          pnpm install
          npm run build
          echo "📦 Build completed - analyzing bundle size..."

  foundation-compliance-report:
    name: 📋 Foundation Compliance Report  
    runs-on: ubuntu-latest
    needs: [foundation-protection, feature-validation]
    if: always()
    
    steps:
      - name: 📊 Generate Compliance Report
        run: |
          echo "🔒 FOUNDATION PROTECTION RESULTS:"
          echo "✅ Foundation tests: ${{ needs.foundation-protection.result }}"
          echo "✅ Feature validation: ${{ needs.feature-validation.result }}"
          echo ""
          echo "📋 COMPLIANCE STATUS:"
          if [ "${{ needs.foundation-protection.result }}" = "success" ] && [ "${{ needs.feature-validation.result }}" = "success" ]; then
            echo "🎉 ALL CHECKS PASSED - PR APPROVED FOR CODERABBIT REVIEW"
          else
            echo "❌ COMPLIANCE FAILED - FIX ISSUES BEFORE CODERABBIT REVIEW"
          fi
          
      - name: 📝 Post Compliance Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const report = `
            ## 🔒 Foundation Protection Report
            
            **Foundation Tests**: ${{ needs.foundation-protection.result }}
            **Feature Validation**: ${{ needs.feature-validation.result }}
            
            ${needs.foundation-protection.result === 'success' && needs.feature-validation.result === 'success' 
              ? '✅ **ALL CHECKS PASSED** - Ready for CodeRabbit review!' 
              : '❌ **COMPLIANCE FAILED** - Please fix issues before CodeRabbit review'}
            
            ### 🔒 Foundation Compliance Checklist
            - [ ] 12-month horizontal structure preserved
            - [ ] Week day headers intact (top & bottom)  
            - [ ] Month labels maintained (left & right)
            - [ ] "Life is bigger than a week" philosophy preserved
            - [ ] Performance benchmarks maintained (112+ FPS, <100MB memory)
            - [ ] Cross-platform consistency verified
            
            **Ready for CodeRabbit Review**: ${needs.foundation-protection.result === 'success' ? '✅' : '❌'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });